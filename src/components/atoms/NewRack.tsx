/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.11 ./public/assets/models/newRack.glb -t 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    customizable_warehouse_racksample2: THREE.Mesh
    customizable_warehouse_racksample2001: THREE.Mesh
  }
  materials: {}
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function NewRack(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('assets/models/newRack.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.customizable_warehouse_racksample2.geometry} material={nodes.customizable_warehouse_racksample2.material} position={[0.454, 0, 0.576]} scale={[0.013, 0.01, 0.009]} />
      <mesh geometry={nodes.customizable_warehouse_racksample2001.geometry} material={nodes.customizable_warehouse_racksample2001.material} position={[1.028, 0, 0.576]} scale={[0.013, 0.01, 0.009]} />
    </group>
  )
}

useGLTF.preload('assets/models/newRack.glb')
