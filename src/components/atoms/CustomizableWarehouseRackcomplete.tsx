/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.11 public/assets/models/customizable_warehouse_rackcomplete.glb -t 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh;
  };
  materials: {};
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function CustomizableWarehouseRackcomplete(
  props: JSX.IntrinsicElements["group"]
) {
  const { nodes, materials } = useGLTF(
    "assets/models/customizable_warehouse_rackcomplete.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null} scale={[0.01, 0.0091, 0.01]} rotation-x={-Math.PI * 0.5} rotation-z={-Math.PI * 1} position={[1,0,0.06]}>
      <mesh geometry={nodes.mesh_0.geometry} material={nodes.mesh_0.material} />
    </group>
  );
}

useGLTF.preload("assets/models/customizable_warehouse_rackcomplete.glb");

export default CustomizableWarehouseRackcomplete;
