"use client";

import Head from "next/head";
import { api } from "~/utils/api";
import "remixicon/fonts/remixicon.css";
import NavBar from "~/components/organisums/NavBar";
import Button from "~/components/atoms/Button";
import PROD_DATA from "~/utils/lib/feedData/ProductData.json";
import MOCK_DATA from "~/utils/lib/feedData/MOCK_DATA.json";
import { useEffect, useState } from "react";

export default function Home() {
  const utils: any = api.useContext();
  const [productData, setProductData] = useState<any>([]);

  // fot add products
  const { mutate: addProducts, isLoading: isLoadingAddNewArea } =
    api.products.createManyProducts.useMutation({
      onMutate: () => {
        utils.products.allProducts.cancel();
        const optimisticUpdate = utils.products.allProducts.getData();

        if (!optimisticUpdate) {
          utils.products.allProducts.setData(optimisticUpdate);
        }
      },
      onSettled: () => {
        utils.products.allProducts.invalidate();
      },
    });

  // delete all product locations
  const { mutate: deleteAllProductLocations, isLoading: isLoadingDeleteAllProductLocation } =
    api.products.deleteAllProductLocations.useMutation({
      onMutate: () => {
        utils.products.allProducts.cancel();
        const optimisticUpdate = utils.products.allProducts.getData();

        if (!optimisticUpdate) {
          utils.products.allProducts.setData(optimisticUpdate);
        }
      },
      onSettled: () => {
        utils.products.allProducts.invalidate();
      },
    });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-[white]">
        <NavBar />

        <div className="relative col-span-6 col-start-2 h-[calc(100vh-56px)] overflow-auto p-5 gap-2 flex flex-col justify-start">
          <Button
            className="rounded-md bg-[#F5F5F5] p-2 text-[#333333] shadow-md"
            isLoading={isLoadingAddNewArea}
            onClick={() => {
              addProducts(MOCK_DATA);
            }}
          >
            Upload products
          </Button>
          <Button
            className="rounded-md bg-[#F5F5F5] p-2 text-[#333333] shadow-md"
            isLoading={isLoadingDeleteAllProductLocation}
            onClick={() => {
              deleteAllProductLocations();
            }}
          >
            Delete Product Locations
          </Button>
        </div>
      </main>
    </>
  );
}
